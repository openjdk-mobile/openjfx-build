commit 8f0fad6eaa6b3575009a03b0b88e850b8c8577f9
Author: Johan Vos <johan@lodgon.com>
Date:   Thu Sep 25 11:06:32 2025 +0200

    Add javafx specific patch

diff --git a/README_OpenJFX.md b/README_OpenJFX.md
new file mode 100644
index 00000000000..412f2115e37
--- /dev/null
+++ b/README_OpenJFX.md
@@ -0,0 +1,12 @@
+#Building OpenJDK with OpenJFX
+
+- make sure you have an OpenJFX clone locally, e.g. at /path/to/openjfx
+
+- configure: `configure --with-conf-name=jfx0326 --with-openjfx-modules=/path/to/openjfx --disable-warnings-as-errors`
+
+- build: 
+-- `cd build/jfx0326`
+-- `make jdk`
+
+
+
diff --git a/make/autoconf/configure.ac b/make/autoconf/configure.ac
index 2e608f893d6..9627f0f120e 100644
--- a/make/autoconf/configure.ac
+++ b/make/autoconf/configure.ac
@@ -166,6 +166,7 @@ JDKOPT_SETUP_JDK_OPTIONS
 
 SRCDIRS_SETUP_DIRS
 SRCDIRS_SETUP_IMPORT_MODULES
+SRCDIRS_SETUP_OPENJFX_MODULES
 
 ################################################################################
 #
diff --git a/make/autoconf/lib-bundled.m4 b/make/autoconf/lib-bundled.m4
index 3246697663c..75fb2754fc2 100644
--- a/make/autoconf/lib-bundled.m4
+++ b/make/autoconf/lib-bundled.m4
@@ -41,6 +41,8 @@ AC_DEFUN_ONCE([LIB_SETUP_BUNDLED_LIBS],
   LIB_SETUP_ZLIB
   LIB_SETUP_LCMS
   LIB_SETUP_HARFBUZZ
+  LIB_SETUP_GTK
+  LIB_SETUP_PANGO
 ])
 
 ################################################################################
@@ -357,3 +359,89 @@ AC_DEFUN_ONCE([LIB_SETUP_HARFBUZZ],
   AC_SUBST(HARFBUZZ_CFLAGS)
   AC_SUBST(HARFBUZZ_LIBS)
 ])
+
+################################################################################
+# Setup gtk
+################################################################################
+AC_DEFUN_ONCE([LIB_SETUP_GTK],
+[
+  AC_ARG_WITH(gtk, [AS_HELP_STRING([--with-gtk],
+      [use gtk from build system or OpenJDK source (system, bundled) @<:@bundled@:>@])])
+
+  AC_MSG_CHECKING([for which gtk to use])
+
+  DEFAULT_GTK=system
+
+  # If user didn't specify, use DEFAULT_GTK
+  if test "x${with_gtk}" = "x"; then
+    with_gtk=${DEFAULT_GTK}
+  fi
+
+  if test "x${with_gtk}" = "xbundled"; then
+    USE_EXTERNAL_GTK=false
+    GTK_CFLAGS=""
+    GTK_LIBS=""
+    AC_MSG_RESULT([bundled])
+  elif test "x${with_gtk}" = "xsystem"; then
+    AC_MSG_RESULT([system])
+    if test "x$OPENJDK_TARGET_OS" = xlinux; then
+      PKG_CHECK_MODULES([GTK], [gtk+-3.0 gthread-2.0 xtst gio-unix-2.0], [GTK_FOUND=yes], [GTK_FOUND=no])
+      if test "x${GTK_FOUND}" = "xyes"; then
+        # PKG_CHECK_MODULES will set GTK_CFLAGS and GTK_LIBS
+        USE_EXTERNAL_GTK=true
+      else
+        HELP_MSG_MISSING_DEPENDENCY([gtk])
+        AC_MSG_ERROR([--with-gtk=system specified, but no gtk found! $HELP_MSG])
+      fi
+    fi
+  else
+    AC_MSG_ERROR([Invalid value for --with-gtk: ${with_gtk}, use 'system' or 'bundled'])
+  fi
+
+  AC_SUBST(USE_EXTERNAL_GTK)
+  AC_SUBST(GTK_CFLAGS)
+  AC_SUBST(GTK_LIBS)
+])
+
+
+################################################################################
+# Setup pango
+################################################################################
+AC_DEFUN_ONCE([LIB_SETUP_PANGO],
+[
+  AC_ARG_WITH(gtk, [AS_HELP_STRING([--with-pango],
+      [use pango from build system or OpenJDK source (system, bundled) @<:@bundled@:>@])])
+
+  AC_MSG_CHECKING([for which pango to use])
+
+  DEFAULT_PANGO=system
+  # If user didn't specify, use DEFAULT_PANGO
+  if test "x${with_pango}" = "x"; then
+    with_pango=${DEFAULT_PANGO}
+  fi
+
+  if test "x${with_pango}" = "xbundled"; then
+    USE_EXTERNAL_PANGO=false
+    PANGO_CFLAGS=""
+    PANGO_LIBS=""
+    AC_MSG_RESULT([bundled])
+  elif test "x${with_pango}" = "xsystem"; then
+    AC_MSG_RESULT([system])
+    if test "x$OPENJDK_TARGET_OS" = xlinux; then
+      PKG_CHECK_MODULES([PANGO], [pangoft2], [PANGO_FOUND=yes], [PANGO_FOUND=no])
+      if test "x${PANGO_FOUND}" = "xyes"; then
+        # PKG_CHECK_MODULES will set PANGO_CFLAGS and PANGO_LIBS
+        USE_EXTERNAL_PANGO=true
+      else
+        HELP_MSG_MISSING_DEPENDENCY([pango])
+        AC_MSG_ERROR([--with-pango=system specified, but no pango found! $HELP_MSG])
+      fi
+    fi
+  else
+    AC_MSG_ERROR([Invalid value for --with-pango: ${with_pango}, use 'system' or 'bundled'])
+  fi
+
+  AC_SUBST(USE_EXTERNAL_PANGO)
+  AC_SUBST(PANGO_CFLAGS)
+  AC_SUBST(PANGO_LIBS)
+])
diff --git a/make/autoconf/source-dirs.m4 b/make/autoconf/source-dirs.m4
index ea7d583fba2..46aff9a0367 100644
--- a/make/autoconf/source-dirs.m4
+++ b/make/autoconf/source-dirs.m4
@@ -90,3 +90,51 @@ AC_DEFUN_ONCE([SRCDIRS_SETUP_IMPORT_MODULES],
   AC_SUBST(IMPORT_MODULES_SRC)
   AC_SUBST(IMPORT_MODULES_MAKE)
 ])
+
+AC_DEFUN_ONCE([SRCDIRS_SETUP_OPENJFX_MODULES],
+[
+  AC_ARG_WITH(openjfx-modules, [AS_HELP_STRING([--with-openjfx-modules],
+      [import openjfx modules])])
+
+  if test "x$with_openjfx_modules" != x \
+      && test "x$with_openjfx_modules" != "xno"; then
+    if test -d "$with_openjfx_modules"; then
+      OPENJFX_MODULES_TOPDIR="$with_openjfx_modules"
+      UTIL_FIXUP_PATH([OPENJFX_MODULES_TOPDIR])
+    else
+      AC_MSG_ERROR([--with-openjfx-modules="$with_openjfx_modules" must point to a dir or a zip file])
+    fi
+  fi
+
+  if test -d "$OPENJFX_MODULES_TOPDIR/modules"; then
+    OPENJFX_MODULES_CLASSES="$OPENJFX_MODULES_TOPDIR/modules"
+  fi
+  if test -d "$OPENJFX_MODULES_TOPDIR/modules_cmds"; then
+    OPENJFX_MODULES_CMDS="$OPENJFX_MODULES_TOPDIR/modules_cmds"
+  fi
+  if test -d "$OPENJFX_MODULES_TOPDIR/modules_libs"; then
+    OPENJFX_MODULES_LIBS="$OPENJFX_MODULES_TOPDIR/modules_libs"
+  fi
+  if test -d "$OPENJFX_MODULES_TOPDIR/modules_conf"; then
+    OPENJFX_MODULES_CONF="$OPENJFX_MODULES_TOPDIR/modules_conf"
+  fi
+  if test -d "$OPENJFX_MODULES_TOPDIR/modules_legal"; then
+    OPENJFX_MODULES_LEGAL="$OPENJFX_MODULES_TOPDIR/modules_legal"
+  fi
+  if test -d "$OPENJFX_MODULES_TOPDIR/modules_man"; then
+    OPENJFX_MODULES_MAN="$OPENJFX_MODULES_TOPDIR/modules_man"
+  fi
+  OPENJFX_MODULES_SRC="$OPENJFX_MODULES_TOPDIR"
+  if test -d "$OPENJFX_MODULES_TOPDIR/make"; then
+    OPENJFX_MODULES_MAKE="$OPENJFX_MODULES_TOPDIR/make"
+  fi
+
+  AC_SUBST(OPENJFX_MODULES_CLASSES)
+  AC_SUBST(OPENJFX_MODULES_CMDS)
+  AC_SUBST(OPENJFX_MODULES_LIBS)
+  AC_SUBST(OPENJFX_MODULES_CONF)
+  AC_SUBST(OPENJFX_MODULES_LEGAL)
+  AC_SUBST(OPENJFX_MODULES_MAN)
+  AC_SUBST(OPENJFX_MODULES_SRC)
+  AC_SUBST(OPENJFX_MODULES_MAKE)
+])
diff --git a/make/autoconf/spec.gmk.template b/make/autoconf/spec.gmk.template
index 0b336721d65..7d7489e352c 100644
--- a/make/autoconf/spec.gmk.template
+++ b/make/autoconf/spec.gmk.template
@@ -183,6 +183,15 @@ IMPORT_MODULES_MAN := @IMPORT_MODULES_MAN@
 IMPORT_MODULES_SRC := @IMPORT_MODULES_SRC@
 IMPORT_MODULES_MAKE := @IMPORT_MODULES_MAKE@
 
+OPENJFX_MODULES_CLASSES := @OPENJFX_MODULES_CLASSES@
+OPENJFX_MODULES_CMDS := @OPENJFX_MODULES_CMDS@
+OPENJFX_MODULES_LIBS := @OPENJFX_MODULES_LIBS@
+OPENJFX_MODULES_CONF := @OPENJFX_MODULES_CONF@
+OPENJFX_MODULES_LEGAL := @OPENJFX_MODULES_LEGAL@
+OPENJFX_MODULES_MAN := @OPENJFX_MODULES_MAN@
+OPENJFX_MODULES_SRC := @OPENJFX_MODULES_SRC@
+OPENJFX_MODULES_MAKE := @OPENJFX_MODULES_MAKE@
+
 COPYRIGHT_YEAR := @COPYRIGHT_YEAR@
 HOTSPOT_BUILD_TIME := @HOTSPOT_BUILD_TIME@
 
@@ -834,6 +843,14 @@ USE_EXTERNAL_LIBPNG := @USE_EXTERNAL_LIBPNG@
 PNG_LIBS := @PNG_LIBS@
 PNG_CFLAGS := @PNG_CFLAGS@
 
+USE_EXTERNAL_LIBGTK := @USE_EXTERNAL_LIBGTK@
+GTK_LIBS := @GTK_LIBS@
+GTK_CFLAGS := @GTK_CFLAGS@
+
+USE_EXTERNAL_LIBPANGO := @USE_EXTERNAL_LIBPANGO@
+PANGO_LIBS := @PANGO_LIBS@
+PANGO_CFLAGS := @PANGO_CFLAGS@
+
 # Misc
 INCLUDE_SA := @INCLUDE_SA@
 INCLUDE_JVMCI := @INCLUDE_JVMCI@
diff --git a/make/common/Modules.gmk b/make/common/Modules.gmk
index 3271b889867..a1ead0f6936 100644
--- a/make/common/Modules.gmk
+++ b/make/common/Modules.gmk
@@ -102,11 +102,13 @@ MAN_DOCS_SUBDIRS += share/man windows/man
 # Find all module-info.java files for the current build target platform and
 # configuration.
 # Param 1 - Module to find for, set to * for finding all
+
 FindAllModuleInfos = \
     $(sort $(wildcard \
         $(foreach sub, $(SRC_SUBDIRS), \
           $(patsubst %,%/$(strip $1)/$(sub)/module-info.java, $(TOP_SRC_DIRS))) \
-        $(patsubst %,%/$(strip $1)/module-info.java, $(IMPORT_MODULES_SRC))))
+        $(patsubst %,%/$(strip $1)/module-info.java, $(IMPORT_MODULES_SRC)) \
+        $(patsubst %,%/modules/$(strip $1)/src/main/java/module-info.java, $(OPENJFX_MODULES_SRC))))
 
 # Find module-info.java files in the specific source dir
 # Param 1 - Src dir to find module-info.java files in
@@ -124,8 +126,10 @@ FindModuleInfosForSrcDir = \
 GetModuleNameFromModuleInfo = \
     $(strip $(foreach mi, $1, \
       $(if $(filter $(addsuffix %, $(IMPORT_MODULES_SRC)), $(mi)), \
-        $(notdir $(patsubst %/,%, $(dir $(mi)))), \
-        $(notdir $(patsubst %/,%, $(dir $(patsubst %/,%, $(dir $(patsubst %/,%, $(dir $(mi)))))))))))
+        $(notdir $(patsubst %/,%, $(dir $(patsubst %/,%, $(dir $(patsubst %/,%, $(dir $(patsubst %/,%, $(dir $(mi)))))))))), \
+        $(if $(filter $(addsuffix %, $(OPENJFX_MODULES_SRC)), $(mi)), \
+          $(notdir $(patsubst %/,%, $(dir $(patsubst %/,%, $(dir $(patsubst %/,%, $(dir $(patsubst %/,%, $(dir $(mi)))))))))), \
+          $(notdir $(patsubst %/,%, $(dir $(patsubst %/,%, $(dir $(patsubst %/,%, $(dir $(mi))))))))))))
 
 # Find all modules by looking for module-info.java files and looking at parent
 # directories.
@@ -149,7 +153,11 @@ FindImportedModules = \
 FindModuleSrcDirs = \
     $(strip $(wildcard \
         $(addsuffix /$(strip $1), $(GENERATED_SRC_DIRS) $(IMPORT_MODULES_SRC)) \
-        $(foreach sub, $(SRC_SUBDIRS), $(addsuffix /$(strip $1)/$(sub), $(TOP_SRC_DIRS)))))
+        $(foreach sub, $(SRC_SUBDIRS), $(addsuffix /$(strip $1)/$(sub), $(TOP_SRC_DIRS))) \
+        $(OPENJFX_MODULES_SRC)/modules/$(strip $1)/src/main/java \
+        $(OPENJFX_MODULES_SRC)/modules/$(strip $1)/build/gensrc/jsl-decora \
+        $(OPENJFX_MODULES_SRC)/modules/$(strip $1)/build/gensrc/jsl-prism \
+        $(OPENJFX_MODULES_SRC)/modules/$(strip $1)/src/main/resources))
 
 # Find all specs dirs for a particular module
 # $1 - Module to find specs dirs for
@@ -171,7 +179,10 @@ FindModuleManDirsForDocs = \
 GetModuleSrcPath = \
     $(call PathList, \
         $(addsuffix /*, $(GENERATED_SRC_DIRS) $(IMPORT_MODULES_SRC)) \
-        $(foreach sub, $(SRC_SUBDIRS), $(addsuffix /*/$(sub), $(TOP_SRC_DIRS))))
+        $(foreach sub, $(SRC_SUBDIRS), $(addsuffix /*/$(sub), $(TOP_SRC_DIRS))) \
+        $(addsuffix /*/build/gensrc/jsl-prism, $(OPENJFX_MODULES_SRC)/modules) \
+        $(addsuffix /*/build/gensrc/jsl-decora, $(OPENJFX_MODULES_SRC)/modules) \
+        $(addsuffix /*/src/main/java, $(OPENJFX_MODULES_SRC)/modules))
 
 ################################################################################
 # Extract module dependencies from module-info.java files, both normal
diff --git a/make/modules/javafx.base/Gensrc.gmk b/make/modules/javafx.base/Gensrc.gmk
new file mode 100644
index 00000000000..5f0d4c95f3b
--- /dev/null
+++ b/make/modules/javafx.base/Gensrc.gmk
@@ -0,0 +1,14 @@
+include GensrcCommon.gmk
+
+$(eval $(call SetupTextFileProcessing, BUILD_VERSION_JAVAFX, \
+    SOURCE_FILES := $(OPENJFX_MODULES_SRC)/modules/javafx.base/src/main/version-info/VersionInfo.java, \
+    OUTPUT_FILE := $(SUPPORT_OUTPUTDIR)/gensrc/javafx.base/com/sun/javafx/runtime/VersionInfo.java, \
+    REPLACEMENTS := \
+        @@BUILD_TIMESTAMP@@ => $(BUILD_TIMESTAMP) ; \
+        @@RELEASE_SUFFIX@@ => $(RELEASE_SUFFIX) ; \
+        @@RELEASE_VERSION_SHORT@@ => $(RUNTIME_VERSION) ; \
+        @@VERSION@@ => $(VERSION) ; \
+        @@RUNTIME_VERSION@@ => $(RUNTIME_VERSION), \
+))
+
+TARGETS += $(BUILD_VERSION_JAVAFX)
diff --git a/make/modules/javafx.base/Java.gmk b/make/modules/javafx.base/Java.gmk
new file mode 100644
index 00000000000..71537c155d0
--- /dev/null
+++ b/make/modules/javafx.base/Java.gmk
@@ -0,0 +1 @@
+DISABLED_WARNINGS_java := try deprecation rawtypes unchecked serial cast removal preview restricted dangling-doc-comments overloads module this-escape
diff --git a/make/modules/javafx.controls/Java.gmk b/make/modules/javafx.controls/Java.gmk
new file mode 100644
index 00000000000..f84f785fb58
--- /dev/null
+++ b/make/modules/javafx.controls/Java.gmk
@@ -0,0 +1,7 @@
+DISABLED_WARNINGS_java := try deprecation rawtypes unchecked serial cast removal preview restricted dangling-doc-comments overloads module this-escape \
+                          lossy-conversions static auxiliaryclass exports fallthrough varargs identity
+JAVAC_FLAGS += -encoding UTF-8
+
+COPY += .gif .png .wav .txt .xml .css .pf
+CLEAN_FILES += $(wildcard \
+    $(TOPDIR)/src/javafx.controls/share/classes/com/sun/javafx/scene/control/skin/resources/*.properties )
diff --git a/make/modules/javafx.fxml/Java.gmk b/make/modules/javafx.fxml/Java.gmk
new file mode 100644
index 00000000000..82fcc6967bf
--- /dev/null
+++ b/make/modules/javafx.fxml/Java.gmk
@@ -0,0 +1,3 @@
+DISABLED_WARNINGS_java := try deprecation rawtypes unchecked serial cast removal preview restricted dangling-doc-comments overloads module this-escape \
+                          lossy-conversions static auxiliaryclass exports fallthrough varargs
+JAVAC_FLAGS += -encoding UTF-8
diff --git a/make/modules/javafx.graphics/Java.gmk b/make/modules/javafx.graphics/Java.gmk
new file mode 100644
index 00000000000..a892af72d47
--- /dev/null
+++ b/make/modules/javafx.graphics/Java.gmk
@@ -0,0 +1,17 @@
+DISABLED_WARNINGS_java := try deprecation rawtypes unchecked serial cast removal preview restricted dangling-doc-comments overloads module this-escape \
+                          lossy-conversions static auxiliaryclass exports fallthrough
+JAVAC_FLAGS += -encoding UTF-8
+
+COPY += .gif .png .wav .txt .xml .css .frag .properties
+
+SRC += $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/src/main/resources
+SRC += $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/build/gensrc/jsl-prism
+SRC += $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/build/gensrc/jsl-decora
+
+COPY_FILES += $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/build/gensrc/jsl-prism
+COPY_FILES += $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/build/gensrc/jsl-decora
+
+CLEAN_FILES += $(wildcard \
+    $(TOPDIR)/src/javafx.graphics/share/classes/com/sun/javafx/tk/quantum/*.properties)
+
+TARGETS += $(call CreateHkTargets, $(CLEAN_FILES))
diff --git a/make/modules/javafx.graphics/Lib.gmk b/make/modules/javafx.graphics/Lib.gmk
new file mode 100644
index 00000000000..b00c524241c
--- /dev/null
+++ b/make/modules/javafx.graphics/Lib.gmk
@@ -0,0 +1,139 @@
+include CopyFiles.gmk
+include LibCommon.gmk
+
+# Hook to include the corresponding custom file, if present.
+$(eval $(call IncludeCustomExtension, modules/javafx.graphics/Lib.gmk))
+
+# Prepare the find cache.
+$(call FillFindCache, $(wildcard $(TOPDIR)/src/javafx.graphics/*/native))
+
+################################################################################
+## Build libprism
+################################################################################
+
+SRC_SHARE_PRISM= $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/src/main/native-prism-es2
+ifeq ($(call isTargetOs, linux), true)
+   PLATFORM_SRC := $(SRC_SHARE_PRISM)/x11
+endif
+ifeq ($(call isTargetOs, macosx), true)
+   PLATFORM_SRC := $(SRC_SHARE_PRISM)/macosx
+endif
+$(eval $(call SetupJdkLibrary, BUILD_LIBPRISM, \
+    NAME := prism_es2, \
+    OPTIMIZATION := HIGH, \
+    LIBS_linux := -lX11 -lXxf86vm -lGL, \
+    LIBS_macosx := -framework AppKit -framework ApplicationServices -framework Carbon -framework OpenGL -framework QuartzCore -framework Security, \
+    SRC := $(PLATFORM_SRC), \
+    EXTRA_FILES := $(SRC_SHARE_PRISM)/GLContext.c, \
+    EXTRA_FILES += $(SRC_SHARE_PRISM)/GLFactory.c, \
+    EXTRA_FILES += $(SRC_SHARE_PRISM)/GLPixelFormat.c, \
+    CFLAGS_macosx := -I$(SRC_SHARE_PRISM), \
+    CFLAGS := -Wno-error, \
+))
+
+TARGETS += $(BUILD_LIBPRISM)
+
+################################################################################
+## Build libglass
+################################################################################
+
+SRC_SHARE_GLASS= $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/src/main/native-glass
+ifeq ($(call isTargetOs, linux), true)
+   EXTRA_GLASS_SRC := $(SRC_SHARE_GLASS)/gtk/launcher.c
+endif
+ifeq ($(call isTargetOs, macosx), true)
+   PLATFORM_GLASS_SRC := $(SRC_SHARE_GLASS)/mac
+endif
+
+$(eval $(call SetupJdkLibrary, BUILD_LIBGLASS, \
+    NAME := glass, \
+    OPTIMIZATION := HIGH, \
+    SRC := $(PLATFORM_GLASS_SRC), \
+    LIBS_linux := -lX11, \
+    LIBS_macosx := -framework AppKit -framework ApplicationServices -framework Metal -framework Carbon -framework OpenGL -framework QuartzCore -framework Security -framework Network, \
+    EXTRA_FILES := $(EXTRA_GLASS_SRC), \
+    CFLAGS_macosx := -DMACOS_MIN_VERSION_MAJOR=11 -DMACOS_MIN_VERSION_MINOR=0, \
+))
+
+TARGETS += $(BUILD_LIBGLASS)
+
+ifeq ($(call isTargetOs, linux), true)
+################################################################################
+## Build libglassgtk3
+################################################################################
+
+$(info GTK_CF = $(GTK_CFLAGS))
+$(eval $(call SetupJdkLibrary, BUILD_LIBGLASSGTK3, \
+    NAME := glassgtk3, \
+    LINK_TYPE := C++, \
+    OPTIMIZATION := HIGH, \
+    CFLAGS := $(GTK_CFLAGS), \
+    CFLAGS += -I$(OPENJFX_MODULES_SRC)/modules/javafx.graphics/src/main/native-glass/gtk/libpipewire/include, \
+    EXCLUDE_FILES := $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/src/main/native-glass/gtk/launcher.c, \
+    CXXFLAGS := $(GTK_CFLAGS), \
+    CXXFLAGS += -DGTK_3_MIN_MINOR_VERSION=20, \
+    CXXFLAGS += -DGTK_3_MIN_MICRO_VERSION=0, \
+    LIBS_linux := $(GTK_LIBS) -lX11 -ldl, \
+    SRC := $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/src/main/native-glass/gtk, \
+))
+
+TARGETS += $(BUILD_LIBGLASSGTK3)
+endif
+
+################################################################################
+## Build libjavafx_font
+################################################################################
+
+$(eval $(call SetupJdkLibrary, BUILD_LIBJAVAFXFONT, \
+    NAME := javafx_font, \
+    LINK_TYPE := C++, \
+    OPTIMIZATION := HIGH, \
+    SRC := $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/src/main/native-font, \
+    LIBS_macosx := -framework AppKit -framework ApplicationServices -framework Carbon -framework OpenGL -framework QuartzCore -framework Security, \
+))
+
+TARGETS += $(BUILD_LIBJAVAFXFONT)
+
+################################################################################
+## Build libjavafx_font_freetype
+################################################################################
+
+$(eval $(call SetupJdkLibrary, BUILD_LIBJAVAFXFONTFREETYPE, \
+    NAME := javafx_font_freetype, \
+    LINK_TYPE := C++, \
+    CFLAGS := $(FREETYPE_CFLAGS) -D_ENABLE_PANGO, \
+    OPTIMIZATION := HIGH, \
+    LIBS_linux := -lfreetype, \
+    EXTRA_FILES := $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/src/main/native-font/freetype.c, \
+))
+
+TARGETS += $(BUILD_LIBJAVAFXFONTFREETYPE)
+
+################################################################################
+## Build libjavafx_font_pango
+################################################################################
+
+$(eval $(call SetupJdkLibrary, BUILD_LIBJAVAFXFONTPANGO, \
+    NAME := javafx_font_pango, \
+    LINK_TYPE := C++, \
+    CFLAGS := $(PANGO_CFLAGS) -D_ENABLE_PANGO, \
+    OPTIMIZATION := HIGH, \
+    LIBS_linux := $(PANGO_LIBS), \
+    EXTRA_FILES := $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/src/main/native-font/pango.c, \
+))
+
+TARGETS += $(BUILD_LIBJAVAFXFONTPANGO)
+
+################################################################################
+## Build libjavafx_iio
+################################################################################
+
+$(eval $(call SetupJdkLibrary, BUILD_LIBJAVAFXIIO, \
+    NAME := javafx_iio, \
+    LINK_TYPE := C++, \
+    OPTIMIZATION := HIGH, \
+    SRC := $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/src/main/native-iio/libjpeg, \
+    EXTRA_FILES := $(OPENJFX_MODULES_SRC)/modules/javafx.graphics/src/main/native-iio/jpegloader.c, \
+))
+
+TARGETS += $(BUILD_LIBJAVAFXIIO)
diff --git a/make/modules/javafx.media/Java.gmk b/make/modules/javafx.media/Java.gmk
new file mode 100644
index 00000000000..4ee4ef7f9d2
--- /dev/null
+++ b/make/modules/javafx.media/Java.gmk
@@ -0,0 +1,2 @@
+DISABLED_WARNINGS_java := try deprecation rawtypes unchecked serial cast removal preview restricted dangling-doc-comments overloads module this-escape \
+                          lossy-conversions static auxiliaryclass exports fallthrough varargs 
diff --git a/make/modules/javafx.swing/Java.gmk b/make/modules/javafx.swing/Java.gmk
new file mode 100644
index 00000000000..22774b6d247
--- /dev/null
+++ b/make/modules/javafx.swing/Java.gmk
@@ -0,0 +1,5 @@
+DISABLED_WARNINGS_java := try deprecation rawtypes unchecked serial cast removal preview restricted dangling-doc-comments overloads module this-escape \
+                          lossy-conversions static auxiliaryclass exports fallthrough varargs
+JAVAC_FLAGS += -encoding UTF-8
+
+COPY += .gif .png .wav .txt .xml .css .pf
diff --git a/make/modules/javafx.web/Java.gmk b/make/modules/javafx.web/Java.gmk
new file mode 100644
index 00000000000..82fcc6967bf
--- /dev/null
+++ b/make/modules/javafx.web/Java.gmk
@@ -0,0 +1,3 @@
+DISABLED_WARNINGS_java := try deprecation rawtypes unchecked serial cast removal preview restricted dangling-doc-comments overloads module this-escape \
+                          lossy-conversions static auxiliaryclass exports fallthrough varargs
+JAVAC_FLAGS += -encoding UTF-8
diff --git a/make/modules/jfx.incubator.input/Java.gmk b/make/modules/jfx.incubator.input/Java.gmk
new file mode 100644
index 00000000000..82fcc6967bf
--- /dev/null
+++ b/make/modules/jfx.incubator.input/Java.gmk
@@ -0,0 +1,3 @@
+DISABLED_WARNINGS_java := try deprecation rawtypes unchecked serial cast removal preview restricted dangling-doc-comments overloads module this-escape \
+                          lossy-conversions static auxiliaryclass exports fallthrough varargs
+JAVAC_FLAGS += -encoding UTF-8
diff --git a/make/modules/jfx.incubator.richtext/Java.gmk b/make/modules/jfx.incubator.richtext/Java.gmk
new file mode 100644
index 00000000000..82fcc6967bf
--- /dev/null
+++ b/make/modules/jfx.incubator.richtext/Java.gmk
@@ -0,0 +1,3 @@
+DISABLED_WARNINGS_java := try deprecation rawtypes unchecked serial cast removal preview restricted dangling-doc-comments overloads module this-escape \
+                          lossy-conversions static auxiliaryclass exports fallthrough varargs
+JAVAC_FLAGS += -encoding UTF-8
